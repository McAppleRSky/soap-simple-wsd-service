plugins {
    id 'java'
}

group 'ru.mrs'
version '1.0-SNAPSHOT'
sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

ext {
    fingBugsVersion = "3.0.2"
//    lombokVersion = "1.18.20"
//    springVersion = "5.3.10"
    springBootVersion = "2.5.5"
//    jacksonVersion = "2.9.8"
    wsdl4jVersion = "1.6.3"
    jaxbXjcVersion = "3.0.2"
}

repositories {
    mavenCentral()
}

configurations {
    jaxb
}

dependencies {
//    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
//    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
    jaxb (
            "com.sun.xml.bind:jaxb-core:$jaxbXjcVersion",
            "com.sun.xml.bind:jaxb-xjc:$jaxbXjcVersion",
            "com.sun.xml.bind:jaxb-impl:$jaxbXjcVersion"
    )
}
task generateJavaClasses {
    System.setProperty('javax.xml.accessExternalSchema', 'all')
    def jaxbTargetDir = file("src/main/java/")
    doLast {
        jaxbTargetDir.mkdirs()
        ant.taskdef(
                name: 'xjc',
                classname: 'com.sun.tools.xjc.XJCTask',
                classpath: configurations.jaxb.asPath
        )
        ant.jaxbTargetDir = jaxbTargetDir
        ant.xjc(
                destdir: '${jaxbTargetDir}',
                package: 'ru.mrs.ws.server.soap.simple.wsdl.dev',
                schema: 'src/main/resources/def/employees.wsdl',
                language: 'WSDL'
        )
    }
}
compileJava.dependsOn generateJavaClasses
clean.doFirst {
    def jaxbGeneratedDir = file("src/main/java/ru/mrs/ws/server/soap/simple/xsd/dev")
    delete jaxbGeneratedDir.path
}
/*test {
    useJUnitPlatform()
}*/
